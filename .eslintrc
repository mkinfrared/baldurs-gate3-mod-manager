{
  "env": {
    "browser": true,
    "es6": true,
    "node": true
  },
  "extends": [
    "airbnb",
    "prettier",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:import/typescript",
    "plugin:react/recommended"
  ],
  "globals": {
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly"
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json",
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 2021,
    "sourceType": "module"
  },
  "plugins": [
    "@typescript-eslint",
    "import",
    "prettier",
    "react",
    "react-hooks"
  ],
  "rules": {
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-shadow": "error",
    "@typescript-eslint/no-use-before-define": "error",
    // typescript already handles that issue
    "@typescript-eslint/no-unused-vars": "off",
    "arrow-parens": ["error", "always"],
    "class-methods-use-this": "off",
    "comma-dangle": [
      "error",
      {
        "arrays": "always-multiline",
        "objects": "always-multiline",
        "imports": "always-multiline",
        "exports": "always-multiline",
        "functions": "always-multiline"
      }
    ],
    "consistent-return": "off",
    "import/export": "off",
    "import/extensions": "off",
    "import/group-exports": "error",
    "import/no-absolute-path": "off",
    "import/no-duplicates": ["error", {"considerQueryString": true}],
    "import/no-extraneous-dependencies": "off",
    // typescript already handles that issue
    "import/no-unresolved": "off",
    "import/no-unused-modules": [
      "warn",
      {
        "unusedExports": true
      }
    ],
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index"
        ],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          /* sort in ascending order. Options: ['ignore', 'asc', 'desc'] */
          "caseInsensitive": true
          /* ignore case. Options: [true, false] */
        }
      }
    ],
    "import/prefer-default-export": "off",
    "jsx-a11y/label-has-associated-control": [
      "error",
      {
        "assert": "either",
        "depth": 2
      }
    ],
    "linebreak-style": ["error", "unix"],
    "no-await-in-loop": "off",
    "no-console": [
      "error",
      {
        "allow": ["warn", "error", "info"]
      }
    ],
    "no-continue": "off",
    "no-empty": "error",
    "no-param-reassign": "off",
    "no-restricted-syntax": ["off", "ForOfStatement"],
    "no-plusplus": "off",
    // handled by @typescript/no-shadow
    "no-shadow": "off",
    "no-restricted-exports": "off",
    "no-use-before-define": "off",
    "no-unused-expressions": "error",
    "no-useless-constructor": "error",
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": ["*"],
        "next": [
          "block",
          "class",
          "continue",
          "export",
          "expression",
          "function",
          "if",
          "return",
          "switch",
          "try"
        ]
      },
      {
        "blankLine": "always",
        "prev": [
          "block",
          "class",
          "continue",
          "export",
          "expression",
          "function",
          "if",
          "return",
          "switch",
          "try"
        ],
        "next": ["*"]
      },
      {
        "blankLine": "always",
        "prev": ["const", "let", "var"],
        "next": "*"
      },
      {
        "blankLine": "never",
        "prev": ["singleline-const"],
        "next": ["singleline-const"]
      },
      {
        "blankLine": "always",
        "prev": ["const"],
        "next": ["block-like"]
      },
      {
        "blankLine": "always",
        "prev": ["block-like"],
        "next": ["const"]
      },
      {
        "blankLine": "never",
        "prev": ["singleline-let"],
        "next": ["singleline-let"]
      }
    ],
    "prettier/prettier": "error",
    "prefer-promise-reject-errors": "error",
    "quotes": ["error", "double", "avoid-escape"],
    "react/button-has-type": "error",
    "react/function-component-definition": [
      2,
      { "namedComponents": "arrow-function" }
    ],
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "react/jsx-no-duplicate-props": [
      "error",
      {
        "ignoreCase": false
      }
    ],
    "react/jsx-filename-extension": [
      1,
      {
        "extensions": [".ts", ".tsx"]
      }
    ],
    "react/jsx-one-expression-per-line": "off",
    "react/jsx-props-no-spreading": "off",
    "react/jsx-key": [
      "error",
      {
        "checkFragmentShorthand": true
      }
    ],
    "react/no-unescaped-entities": "off",
    "react/prop-types": "off",
    "react/react-in-jsx-scope": "off",
    "react/require-default-props": "off",
    "react/state-in-constructor": "off",
    "require-await": "error",
    "sort-imports": [
      "error",
      {
        "ignoreCase": false,
        "ignoreDeclarationSort": true,
        "ignoreMemberSort": false
      }
    ]
  },
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      // use <root>/tsconfig.json
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"],
        "moduleDirectory": ["node_modules"]
      },
      "typescript": {
        "alwaysTryTypes": true
        // always try to resolve types under `<root>@types` directory even it doesn't contain any source code, like `@types/unist`
      }
    },
    "react": {
      "pragma": "React",
      "version": "detect"
    }
  },
  "overrides": [
    {
      "files": ["**/*.type.ts", "**/types.ts", "**/*.d.ts"],
      "rules": {
        "import/group-exports": "off",
        "import/prefer-default-export": "off"
      }
    },
    {
      "files": ["react-app-env.d.ts"],
      "rules": {
        "spaced-comment": "off"
      }
    },
    {
      "files": ["*.{spec,test}.{ts,tsx}"],
      "rules": {
        "@typescript-eslint/no-non-null-assertion": "off"
      }
    },
    {
      "files": ["*.dto.ts"],
      "rules": {
        "max-classes-per-file": "off"
      }
    },
    {
      "files": [
        "**/*.stories.*",
        ".storybook/*",
        "**/__mocks__/*",
        "rollup.config.js",
        "reportWebVitals.ts"
      ],
      "rules": {
        "import/no-unused-modules": "off",
        "import/no-anonymous-default-export": "off"
      }
    }
  ]
}
