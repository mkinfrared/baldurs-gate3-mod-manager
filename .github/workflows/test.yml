name: Test

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node-version: [18.x]
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install Node.js and NPM
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Install Dependencies
        run: |
          pnpm install

      - name: Check Types and Build
        run: |
          pnpm exec tsc
          pnpm build

      - name: Import Certificate
        if: matrix.os == 'macos-latest'
        run: |
          echo "${{ secrets.APPLE_CERT_BASE64 }}" | base64 --decode > certificate.p12
          security create-keychain -p actions build.keychain
          security default-keychain -s build.keychain
          security import certificate.p12 -k build.keychain -P "${{ secrets.CSC_KEY_PASSWORD }}" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k actions build.keychain

      - name: Build
        if: matrix.os == 'macos-latest'
        run: |
          pnpm build
          CSC_FOR_PULL_REQUEST=true pnpm package

      - name: Upload Artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v2
        with:
          path: release/build/*.dmg

      - name: Lint
        run: |
          pnpm lint

      - name: Test
        run: |
          pnpm test
